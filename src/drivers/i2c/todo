# Leon

- I2c_device_send_bytes - done
    - check global I2C has been initialised
    - check there's enough space for the action
    - build a I2c_ActionSingleSend structure
    - place it into the I2C global
    - set the action type for the same index
    - return true
- I2c_device_recv_bytes - done
- I2c_get_device_action_status
    - check global I2C has been initialised
    - iterate through I2C.actions that are not NONE and get status if the
      devices match
- I2c_action_single_recv
- I2c_clear_device_action
- I2c_action_x_master_busy_check
    - Check major cycle numbers
    - If major cycle failed:
        - Set master_busy true
        - Return error
    - Check minor cycles
    - If master not busy:
        - Set master_busy false
        - Set num_master_major_busy_checks = 0
        - Return no error
    - If master busy:
        - Set master_busy true
        - Increment num_master_major_busy_checks
        - Return no error

bool master_busy = true;
i2c_error = I2c_action_x_master_busy_check(p_action_in, &master_busy);
if (master_busy) {
    return i2c_error;
}
else {
    p_action_in->step++;
}

# Duncan

- I2c_step - done
- I2c_get_device_recved_bytes - done
- I2c_get_device_action_failure_cause - done
- I2c_action_burst_send
- I2c_action_burst_recv